/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Arrays;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hunter
 */
public class Menu extends javax.swing.JFrame {
    
    int diceNum;
    String qDice = "";
    
    
    String yourName = "";
    String race = "";
    
    //Pt = points
    int strPt = 0;
    int dexPt = 0;
    int conPt = 0;
    int intPt = 0;
    int wisPt = 0;
    int chaPt = 0;
    
    //Md = modifiers
    int strMd = 0;
    int dexMd = 0;
    int conMd = 0;
    int intMd = 0;
    int wisMd = 0;
    int chaMd = 0;
    
    String spell = "";


    
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jp1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jp2 = new javax.swing.JPanel();
        javax.swing.JPanel jPanel10 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel9 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();
        jTextScore1 = new javax.swing.JTextField();
        javax.swing.JLabel jLabel11 = new javax.swing.JLabel();
        jTextScore2 = new javax.swing.JTextField();
        javax.swing.JLabel jLabel12 = new javax.swing.JLabel();
        jTextScore3 = new javax.swing.JTextField();
        javax.swing.JLabel jLabel13 = new javax.swing.JLabel();
        jTextScore4 = new javax.swing.JTextField();
        javax.swing.JLabel jLabel14 = new javax.swing.JLabel();
        jTextScore5 = new javax.swing.JTextField();
        javax.swing.JLabel jLabel15 = new javax.swing.JLabel();
        jTextScore6 = new javax.swing.JTextField();
        jTextMod1 = new javax.swing.JTextField();
        jTextMod2 = new javax.swing.JTextField();
        jTextMod3 = new javax.swing.JTextField();
        jTextMod4 = new javax.swing.JTextField();
        jTextMod5 = new javax.swing.JTextField();
        jTextMod6 = new javax.swing.JTextField();
        javax.swing.JButton btnAdd = new javax.swing.JButton();
        javax.swing.JButton btnClear = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btnRndPts = new javax.swing.JButton();
        jTextRace = new javax.swing.JComboBox<>();
        javax.swing.JButton btnDelete = new javax.swing.JButton();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        tableCharacters = new javax.swing.JTable();
        strPNG = new javax.swing.JLabel();
        dexPNG = new javax.swing.JLabel();
        conPNG = new javax.swing.JLabel();
        intPNG = new javax.swing.JLabel();
        wisPNG = new javax.swing.JLabel();
        chaPNG = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jp3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextRaceDes = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jp4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jp5 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        barbarianTA = new javax.swing.JTextArea();
        barbarianL = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        fighterTA = new javax.swing.JTextArea();
        fighterL = new javax.swing.JLabel();
        rangerL = new javax.swing.JLabel();
        rogueL = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        rangerTA = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        rogueTA = new javax.swing.JTextArea();
        monkL = new javax.swing.JLabel();
        paladinL = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        monkTA = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        paladinTA = new javax.swing.JTextArea();
        jp6 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        bardTab = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        bard0 = new javax.swing.JList<>();
        jScrollPane13 = new javax.swing.JScrollPane();
        bard1 = new javax.swing.JList<>();
        clericTab = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cleric0 = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        cleric1 = new javax.swing.JList<>();
        jLabel26 = new javax.swing.JLabel();
        druidTab = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        druid0 = new javax.swing.JList<>();
        jScrollPane17 = new javax.swing.JScrollPane();
        druid1 = new javax.swing.JList<>();
        jLabel34 = new javax.swing.JLabel();
        paladinTab = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        paladin0 = new javax.swing.JList<>();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        paladin1 = new javax.swing.JList<>();
        rangerTab = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        ranger0 = new javax.swing.JList<>();
        jScrollPane19 = new javax.swing.JScrollPane();
        ranger1 = new javax.swing.JList<>();
        jLabel35 = new javax.swing.JLabel();
        sorcererTab = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        sorcerer0 = new javax.swing.JList<>();
        jScrollPane21 = new javax.swing.JScrollPane();
        sorcerer1 = new javax.swing.JList<>();
        jLabel36 = new javax.swing.JLabel();
        warlockTab = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane22 = new javax.swing.JScrollPane();
        warlock0 = new javax.swing.JList<>();
        jScrollPane23 = new javax.swing.JScrollPane();
        warlock1 = new javax.swing.JList<>();
        jLabel37 = new javax.swing.JLabel();
        wizardTab = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane24 = new javax.swing.JScrollPane();
        wizard0 = new javax.swing.JList<>();
        jScrollPane25 = new javax.swing.JScrollPane();
        wizard1 = new javax.swing.JList<>();
        jLabel38 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        castingTimeLabel = new javax.swing.JLabel();
        castingTimeText = new javax.swing.JTextField();
        rangeLabel = new javax.swing.JLabel();
        rangeText = new javax.swing.JTextField();
        componentsLabel = new javax.swing.JLabel();
        componentsText = new javax.swing.JTextField();
        durationLabel = new javax.swing.JLabel();
        durationText = new javax.swing.JTextField();
        concentrationLabel = new javax.swing.JLabel();
        concentrationText = new javax.swing.JTextField();
        spellNameLabel = new javax.swing.JLabel();
        spellNameText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DnDCharacterCreation");
        setMinimumSize(new java.awt.Dimension(946, 700));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(151, 102, 0));

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Home");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Points/Mods");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Races");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Dice");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(22, 22, 22))
        );

        jPanel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel13MouseClicked(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Classes");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel21)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel21)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel15MouseClicked(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Spells");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel13, jPanel15, jPanel4, jPanel5, jPanel6, jPanel8});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 60));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/DnD_logo.png"))); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel20.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel20.setText("Note Pad:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(261, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout jp1Layout = new javax.swing.GroupLayout(jp1);
        jp1.setLayout(jp1Layout);
        jp1Layout.setHorizontalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp1Layout.setVerticalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Home", jp1);

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/group.png"))); // NOI18N
        jLabel7.setText("Characters:");

        jPanel9.setOpaque(false);

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel8.setText("Name");

        jTextName.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jTextName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNameActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel9.setText("Race");

        jLabel10.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel10.setText("Strength");

        jTextScore1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel11.setText("Dexterity");

        jTextScore2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel12.setText("Constitution");

        jTextScore3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel13.setText("Intelligence");

        jTextScore4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel14.setText("Widsom");

        jTextScore5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jTextScore5.setToolTipText("");

        jLabel15.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel15.setText("Charisma");

        jTextScore6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N

        jTextMod1.setEditable(false);
        jTextMod1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jTextMod1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextMod1ActionPerformed(evt);
            }
        });

        jTextMod2.setEditable(false);
        jTextMod2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N

        jTextMod3.setEditable(false);
        jTextMod3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jTextMod3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextMod3ActionPerformed(evt);
            }
        });

        jTextMod4.setEditable(false);
        jTextMod4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N

        jTextMod5.setEditable(false);
        jTextMod5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jTextMod5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextMod5ActionPerformed(evt);
            }
        });

        jTextMod6.setEditable(false);
        jTextMod6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N

        btnAdd.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/add.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/clear.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("(Points 1-30)");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("(Modifiers)");

        btnRndPts.setText("Randomize All Points");
        btnRndPts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRndPtsActionPerformed(evt);
            }
        });

        jTextRace.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jTextRace.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "High Elf", "Wood Elf", "Dark Elf", "Dragonborn", "Hill Dwarf", "Mountain Dwarf", "Lightfoot Halfling", "Stout Halfling", "Forest Gnome", "Rock Gnome", "Human", "Half-Elf", "Half-Orc", "Tiefling" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextName)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnRndPts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTextScore1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextMod1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTextScore2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextMod2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTextScore3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextMod3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTextScore4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextMod4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTextScore5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextMod5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTextScore6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextMod6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextRace, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnClear});

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextMod1, jTextMod2, jTextMod3, jTextMod4, jTextMod5, jTextMod6, jTextScore2, jTextScore3, jTextScore4, jTextScore5, jTextScore6});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(5, 5, 5)
                .addComponent(jTextRace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextScore1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextScore2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMod2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextScore3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMod3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextScore4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMod4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextScore5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMod5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextScore6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMod6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRndPts)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDelete.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tableCharacters.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        tableCharacters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Race", "Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCharacters);

        strPNG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/strength.png"))); // NOI18N
        strPNG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                strPNGMouseClicked(evt);
            }
        });

        dexPNG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/dexterity.png"))); // NOI18N
        dexPNG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dexPNGMouseClicked(evt);
            }
        });

        conPNG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/constitution.png"))); // NOI18N
        conPNG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conPNGMouseClicked(evt);
            }
        });

        intPNG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/intelligence.png"))); // NOI18N
        intPNG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                intPNGMouseClicked(evt);
            }
        });

        wisPNG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/wisdom.png"))); // NOI18N
        wisPNG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wisPNGMouseClicked(evt);
            }
        });

        chaPNG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/charisma.png"))); // NOI18N
        chaPNG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chaPNGMouseClicked(evt);
            }
        });

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Click the icon showing the Point categories to assign the three highest values from four D6 rolls");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(strPNG, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dexPNG, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(conPNG, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(intPNG, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(wisPNG, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chaPNG, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chaPNG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(wisPNG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(intPNG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(conPNG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(strPNG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dexPNG))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jp2Layout = new javax.swing.GroupLayout(jp2);
        jp2.setLayout(jp2Layout);
        jp2Layout.setHorizontalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp2Layout.setVerticalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Points/Mods", jp2);

        jPanel11.setBackground(new java.awt.Color(204, 204, 204));

        jComboBox1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Score abbreviations", "High Elf", "Wood Elf", "Dark Elf", "Dragonborn", "Hill Dwarf", "Mountain Dwarf", "Lightfoot Halfling", "Stout Halfling", "Forest Gnome", "Rock Gnome", "Human", "Half-Elf", "Half-Orc", "Tiefling" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextRaceDes.setEditable(false);
        jTextRaceDes.setColumns(20);
        jTextRaceDes.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jTextRaceDes.setLineWrap(true);
        jTextRaceDes.setRows(5);
        jTextRaceDes.setText("Str Strength\nDex Dexterity\nCon Constitution\nInt Intelligence\nWis Wisdom\nCha Charisma");
        jScrollPane3.setViewportView(jTextRaceDes);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel18.setText("Show Race bonuses for Point stats");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(342, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(300, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jp3Layout = new javax.swing.GroupLayout(jp3);
        jp3.setLayout(jp3Layout);
        jp3Layout.setHorizontalGroup(
            jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp3Layout.setVerticalGroup(
            jp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Races", jp3);

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 48)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setToolTipText("");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton7.setText("Clear");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Roll:");

        jPanel12.setBackground(new java.awt.Color(153, 102, 0));
        jPanel12.setForeground(new java.awt.Color(153, 102, 0));

        jButton1.setBackground(new java.awt.Color(181, 139, 29));
        jButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/d4.png"))); // NOI18N
        jButton1.setText("D4");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setMaximumSize(new java.awt.Dimension(202, 148));
        jButton1.setMinimumSize(new java.awt.Dimension(202, 148));
        jButton1.setPreferredSize(new java.awt.Dimension(202, 148));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(181, 139, 29));
        jButton2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/d6.png"))); // NOI18N
        jButton2.setText("D6");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setMaximumSize(new java.awt.Dimension(202, 148));
        jButton2.setMinimumSize(new java.awt.Dimension(202, 148));
        jButton2.setPreferredSize(new java.awt.Dimension(202, 148));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(181, 139, 29));
        jButton3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/d8.png"))); // NOI18N
        jButton3.setText("D8");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setMaximumSize(new java.awt.Dimension(202, 148));
        jButton3.setMinimumSize(new java.awt.Dimension(202, 148));
        jButton3.setPreferredSize(new java.awt.Dimension(202, 148));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(181, 139, 29));
        jButton4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/d10.png"))); // NOI18N
        jButton4.setText("D10");
        jButton4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setMaximumSize(new java.awt.Dimension(202, 148));
        jButton4.setMinimumSize(new java.awt.Dimension(202, 148));
        jButton4.setPreferredSize(new java.awt.Dimension(202, 148));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(181, 139, 29));
        jButton5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/d12.png"))); // NOI18N
        jButton5.setText("D12");
        jButton5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(181, 139, 29));
        jButton6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/d20.png"))); // NOI18N
        jButton6.setText("D20");
        jButton6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jp4Layout = new javax.swing.GroupLayout(jp4);
        jp4.setLayout(jp4Layout);
        jp4Layout.setHorizontalGroup(
            jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp4Layout.setVerticalGroup(
            jp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Dice", jp4);

        jPanel14.setBackground(new java.awt.Color(204, 204, 204));

        barbarianTA.setEditable(false);
        barbarianTA.setColumns(20);
        barbarianTA.setRows(5);
        barbarianTA.setText("Fierce warrior of primitive background who can enter a battle rage\nHit Die: d12\nPrimary Ability: Strength\nSaving Throw: Strength & Constitution");
        jScrollPane6.setViewportView(barbarianTA);

        barbarianL.setText("Barbarian");

        fighterTA.setEditable(false);
        fighterTA.setColumns(20);
        fighterTA.setRows(5);
        fighterTA.setText("Master of martial combat, skilled with a variety of weapons and armor\nHit Die: d10\nPrimary Ability: Strength or Dexterity\nSaving Throw: Strength & Constitution");
        jScrollPane5.setViewportView(fighterTA);

        fighterL.setText("Fighter");

        rangerL.setText("Ranger");

        rogueL.setText("Rogue");

        rangerTA.setEditable(false);
        rangerTA.setColumns(20);
        rangerTA.setRows(5);
        rangerTA.setText("Warrior who uses martial prowers and nature magic to combat threats on the\n\tedges of civilization\nHit Die: d10\nPrimary Ability: Dexterity & Wisdom\nSaving Throw: Strength & Dexterity");
        jScrollPane7.setViewportView(rangerTA);

        rogueTA.setEditable(false);
        rogueTA.setColumns(20);
        rogueTA.setRows(5);
        rogueTA.setText("Scoundrel who uses stealth and trickery to overcome obstacles and enemies\nHit Die: d8\nPrimary Ability: Dexterity\nSaving Throw: Dexterity & Intelligence");
        jScrollPane8.setViewportView(rogueTA);

        monkL.setText("Monk");

        paladinL.setText("Paladin");

        monkTA.setEditable(false);
        monkTA.setColumns(20);
        monkTA.setRows(5);
        monkTA.setText("Master of martial arts, harnessing the power opf the body in pursuit of physical\n\tand spiritual perfection\nHit Die: d8\nPrimary Ability: Dexterity & Wisdom\nSaving Throw: Strength & Dexterity");
        jScrollPane9.setViewportView(monkTA);

        paladinTA.setEditable(false);
        paladinTA.setColumns(20);
        paladinTA.setRows(5);
        paladinTA.setText("Holy warrior bound to a sacred oath\nHit Die: d10\nPrimary Ability: Strength & Charisma\nSaving Throw: Wisdom & Charisma");
        jScrollPane10.setViewportView(paladinTA);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(barbarianL)
                    .addComponent(rangerL)
                    .addComponent(monkL)
                    .addComponent(jScrollPane9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                    .addComponent(jScrollPane8)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paladinL)
                            .addComponent(rogueL)
                            .addComponent(fighterL))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane10))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(barbarianL)
                    .addComponent(fighterL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rangerL)
                    .addComponent(rogueL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monkL)
                    .addComponent(paladinL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(242, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jp5Layout = new javax.swing.GroupLayout(jp5);
        jp5.setLayout(jp5Layout);
        jp5Layout.setHorizontalGroup(
            jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp5Layout.setVerticalGroup(
            jp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Classes", jp5);

        jLabel23.setText("Cantrips (0 Level)");

        jLabel24.setText("1st Level");

        bard0.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Blade Ward", "Dancing Lights", "Friends", "Light", "Mage Hand", "Mending", "Message", "Minor Illusion", "Prestidigitation", "True Strike", "Vicious Mockery" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        bard0.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        bard0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bard0MouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(bard0);

        bard1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Animal Friendship", "Bane", "Charm Person", "Comprehend Languages", "Cure Wounds", "Detect Magic", "Disguise Self", "Dissonant Whispers", "Faerie Fire", "Feather Fall", "Healing Word", "Heroism", "Identify", "Illusory Script", "Longstrider", "Silent Image", "Sleep", "Speak with Animals", "Tasha's Hideous Laughter", "Thunderwave", "Unseen Servant" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        bard1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        bard1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bard1MouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(bard1);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                    .addComponent(jScrollPane13))
                .addContainerGap())
        );

        javax.swing.GroupLayout bardTabLayout = new javax.swing.GroupLayout(bardTab);
        bardTab.setLayout(bardTabLayout);
        bardTabLayout.setHorizontalGroup(
            bardTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bardTabLayout.setVerticalGroup(
            bardTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Bard", bardTab);

        jLabel25.setText("Cantrips (0 Level)");

        cleric0.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Guidance", "Light", "Mending", "Resistance", "Sacred Flame", "Spare the Dying", "Thaumaturgy" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        cleric0.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        cleric0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cleric0MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(cleric0);

        cleric1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Bane", "Bless", "Command", "Create or Destroy Water", "Cure Wounds", "Detect Evil and Good", "Detect Magic", "Detect Poison and Disease", "Guiding Bolt", "Healing Word", "Inflict Wounds", "Protection from Evil and Good", "Purify Food and Drink", "Sanctuary", "Shield of Faith" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        cleric1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        cleric1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cleric1MouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(cleric1);

        jLabel26.setText("1st Level");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );

        javax.swing.GroupLayout clericTabLayout = new javax.swing.GroupLayout(clericTab);
        clericTab.setLayout(clericTabLayout);
        clericTabLayout.setHorizontalGroup(
            clericTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        clericTabLayout.setVerticalGroup(
            clericTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Cleric", clericTab);

        jLabel27.setText("Cantrips (0 Level)");

        druid0.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Druidcraft", "Guidance", "Mending", "Poison Spray", "Produce Flame", "Resistance", "Shillelagh", "Thorn Whip" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        druid0.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        druid0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                druid0MouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(druid0);

        druid1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Animal Friendship", "Charm Person", "Create or Destroy Water", "Cure Wounds", "Detect Magic", "Detect Poison and Disease", "Entangle", "Faerie Fire", "Fog Cloud", "Goodberry", "Healing Word", "Jump", "Longstrider", "Purify Food and Drink", "Speak with Animals", "Thunderwave" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        druid1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        druid1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                druid1MouseClicked(evt);
            }
        });
        jScrollPane17.setViewportView(druid1);

        jLabel34.setText("1st Level");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addComponent(jScrollPane14))
                .addContainerGap())
        );

        javax.swing.GroupLayout druidTabLayout = new javax.swing.GroupLayout(druidTab);
        druidTab.setLayout(druidTabLayout);
        druidTabLayout.setHorizontalGroup(
            druidTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        druidTabLayout.setVerticalGroup(
            druidTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Druid", druidTab);

        jLabel28.setText("Cantrips (0 Level)");

        paladin0.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane15.setViewportView(paladin0);

        jLabel33.setText("1st Level");

        paladin1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Bless", "Command", "Compelled Duel", "Cure Wounds", "Detect Evil and Good", "Detect Magic", "Detect Poison and Disease", "Divine Favor", "Heroism", "Protection from Evil and Good", "Purify Food and Drink", "Searing Smite", "Shield of Faith", "Thunderous Smite", "Wrathful Smite" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        paladin1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        paladin1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paladin1MouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(paladin1);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel28)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane15)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout paladinTabLayout = new javax.swing.GroupLayout(paladinTab);
        paladinTab.setLayout(paladinTabLayout);
        paladinTabLayout.setHorizontalGroup(
            paladinTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        paladinTabLayout.setVerticalGroup(
            paladinTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Paladin", paladinTab);

        jLabel29.setText("Cantrips (0 Level)");

        ranger0.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ranger0.setToolTipText("");
        jScrollPane18.setViewportView(ranger0);

        ranger1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Alarm", "Animal Friendship", "Cure Wounds", "Detect Magic", "Detect Poison and Disease", "Ensnaring Strike", "Fod Cloud", "Goodberry", "Hail of Thorns", "Hunter's Mark", "Jump", "Longstrider", "Speak with Animals" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ranger1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ranger1.setToolTipText("");
        ranger1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ranger1MouseClicked(evt);
            }
        });
        jScrollPane19.setViewportView(ranger1);

        jLabel35.setText("1st Level");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addComponent(jScrollPane18))
                .addContainerGap())
        );

        javax.swing.GroupLayout rangerTabLayout = new javax.swing.GroupLayout(rangerTab);
        rangerTab.setLayout(rangerTabLayout);
        rangerTabLayout.setHorizontalGroup(
            rangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        rangerTabLayout.setVerticalGroup(
            rangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Ranger", rangerTab);

        jLabel30.setText("Cantrips (0 Level)");

        sorcerer0.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Acid Splash", "Blade Ward", "Chill Touch", "Dancing Lights", "Fire Bolt", "Friends", "Light", "Mage Hand", "Mending", "Message", "Minor Illusion", "Poison Spray", "Prestidigitation", "Ray of Frost", "Shocking Grasp", "True Strike" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        sorcerer0.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        sorcerer0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sorcerer0MouseClicked(evt);
            }
        });
        jScrollPane20.setViewportView(sorcerer0);

        sorcerer1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Burning Hands", "Charm Person", "Chromatic Orb", "Color Spray", "Comprehend Languages", "Detect Magic", "Disguise Self", "Expeditious Retreat", "False Life", "Feather Fall", "Fog Cloud", "Jump", "Mage Armor", "Magic Missile", "Ray of Sickness", "Shield", "Silent Image" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        sorcerer1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        sorcerer1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sorcerer1MouseClicked(evt);
            }
        });
        jScrollPane21.setViewportView(sorcerer1);

        jLabel36.setText("1st Level");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(18, 18, 18)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane21, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addComponent(jScrollPane20))
                .addContainerGap())
        );

        javax.swing.GroupLayout sorcererTabLayout = new javax.swing.GroupLayout(sorcererTab);
        sorcererTab.setLayout(sorcererTabLayout);
        sorcererTabLayout.setHorizontalGroup(
            sorcererTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sorcererTabLayout.setVerticalGroup(
            sorcererTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Sorcerer", sorcererTab);

        jLabel31.setText("Cantrips (0 Level)");

        warlock0.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Blade Ward", "Chill Touch", "Eldritch Blast", "Friends", "Mage Hand", "Minor Illusion", "Poison Spray", "Prestidigitation", "True Strike" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        warlock0.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        warlock0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                warlock0MouseClicked(evt);
            }
        });
        jScrollPane22.setViewportView(warlock0);

        warlock1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Armor of Agathys", "Arms of Hadar", "Charm Person", "Comprehend Languages", "Expeditious Retreat", "Hellish Rebuke", "Hex", "Illusory Script", "Protection from Evil and Good", "Unseen Servant", "Witch Bolt" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        warlock1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        warlock1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                warlock1MouseClicked(evt);
            }
        });
        jScrollPane23.setViewportView(warlock1);

        jLabel37.setText("1st Level");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane23, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                    .addComponent(jScrollPane22))
                .addContainerGap())
        );

        javax.swing.GroupLayout warlockTabLayout = new javax.swing.GroupLayout(warlockTab);
        warlockTab.setLayout(warlockTabLayout);
        warlockTabLayout.setHorizontalGroup(
            warlockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        warlockTabLayout.setVerticalGroup(
            warlockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Warlock", warlockTab);

        jLabel32.setText("Cantrips (0 Level)");

        wizard0.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Acid Splash", "Blade Ward", "Chill Touch", "Dancing Lights", "Fire Bolt", "Friends", "Light", "Mage Hand", "Mending", "Message", "Minor Illusion", "Poison Spray", "Prestidigitation", "Ray of Frost", "Shocking Grasp", "True Strike" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        wizard0.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        wizard0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wizard0MouseClicked(evt);
            }
        });
        jScrollPane24.setViewportView(wizard0);

        wizard1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Alarm", "Burning Hands", "Charm Person", "Chromatic Orb", "Color Spray", "Comprehend Languages", "Detect Magic", "Disguise Self", "Expeditious Retreat", "False Life", "Feather Fall", "Find Familiar", "Fog Cloud", "Grease", "Identify", "Illusory Script", "Jump", "Longstrider", "Mage Armor", "Magic Missile", "Protection from Evil and Good", "Ray of Sickness", "Shield", "Silent Image", "Sleep", "Tasha's Hideous Laughter", "Tenser's Floating Disk", "Thunderwave", "Unseen Servant", "Witch Bolt" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        wizard1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        wizard1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wizard1MouseClicked(evt);
            }
        });
        jScrollPane25.setViewportView(wizard1);

        jLabel38.setText("1st Level");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addGap(18, 18, 18)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38)
                    .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel38))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane25)
                    .addComponent(jScrollPane24, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout wizardTabLayout = new javax.swing.GroupLayout(wizardTab);
        wizardTab.setLayout(wizardTabLayout);
        wizardTabLayout.setHorizontalGroup(
            wizardTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        wizardTabLayout.setVerticalGroup(
            wizardTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Wizard", wizardTab);

        jPanel25.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        castingTimeLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        castingTimeLabel.setText("Casting Time");

        castingTimeText.setEditable(false);

        rangeLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        rangeLabel.setText("Range");

        rangeText.setEditable(false);
        rangeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangeTextActionPerformed(evt);
            }
        });

        componentsLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        componentsLabel.setText("Components");

        componentsText.setEditable(false);

        durationLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        durationLabel.setText("Duration");

        durationText.setEditable(false);

        concentrationLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        concentrationLabel.setText("Concentration");

        concentrationText.setEditable(false);

        spellNameLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        spellNameLabel.setText("Spell Name");

        spellNameText.setEditable(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(castingTimeLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rangeLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(componentsLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(durationLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(concentrationLabel)
                            .addComponent(spellNameLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(spellNameText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(castingTimeText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                            .addComponent(rangeText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(componentsText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(concentrationText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(durationText, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(20, 20, 20))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGap(0, 21, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(spellNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spellNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(castingTimeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(castingTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rangeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rangeText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(componentsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(componentsText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(durationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(durationText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(concentrationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(concentrationText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );

        javax.swing.GroupLayout jp6Layout = new javax.swing.GroupLayout(jp6);
        jp6.setLayout(jp6Layout);
        jp6Layout.setHorizontalGroup(
            jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp6Layout.setVerticalGroup(
            jp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Spells", jp6);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 930, 650));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        jTabbedPane1.setSelectedIndex(0);
        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel5.setBackground(new java.awt.Color(242,242,242));
        jPanel6.setBackground(new java.awt.Color(242,242,242));
        jPanel8.setBackground(new java.awt.Color(242,242,242));   
        jPanel13.setBackground(new java.awt.Color(242,242,242));
        jPanel15.setBackground(new java.awt.Color(242,242,242)); 
    }//GEN-LAST:event_jPanel4MouseClicked

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        jTabbedPane1.setSelectedIndex(1);
        jPanel4.setBackground(new java.awt.Color(242,242,242));
        jPanel5.setBackground(new java.awt.Color(153, 153, 153));
        jPanel6.setBackground(new java.awt.Color(242,242,242));
        jPanel8.setBackground(new java.awt.Color(242,242,242));   
        jPanel13.setBackground(new java.awt.Color(242,242,242)); 
        jPanel15.setBackground(new java.awt.Color(242,242,242)); 
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        jTabbedPane1.setSelectedIndex(2);
        jPanel4.setBackground(new java.awt.Color(242,242,242));
        jPanel5.setBackground(new java.awt.Color(242,242,242));
        jPanel6.setBackground(new java.awt.Color(153, 153, 153));
        jPanel8.setBackground(new java.awt.Color(242,242,242)); 
        jPanel13.setBackground(new java.awt.Color(242,242,242)); 
        jPanel15.setBackground(new java.awt.Color(242,242,242)); 
    }//GEN-LAST:event_jPanel6MouseClicked

    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        jTabbedPane1.setSelectedIndex(3);
        jPanel4.setBackground(new java.awt.Color(242,242,242));
        jPanel5.setBackground(new java.awt.Color(242,242,242));
        jPanel6.setBackground(new java.awt.Color(242,242,242));
        jPanel8.setBackground(new java.awt.Color(153, 153, 153)); 
        jPanel13.setBackground(new java.awt.Color(242,242,242)); 
        jPanel15.setBackground(new java.awt.Color(242,242,242)); 
    }//GEN-LAST:event_jPanel8MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        diceNum = 1 +(int) (Math.random() * 8);
        qDice = Integer.toString(diceNum);
        jTextField1.setText(qDice);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        diceNum = 1 +(int) (Math.random() * 10);
        qDice = Integer.toString(diceNum);
        jTextField1.setText(qDice);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        diceNum = 1 +(int) (Math.random() * 12);
        qDice = Integer.toString(diceNum);
        jTextField1.setText(qDice);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        diceNum = 1 +(int) (Math.random() * 20);
        qDice = Integer.toString(diceNum);
        jTextField1.setText(qDice);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jTextField1.setText(qDice="");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        diceNum = 1 +(int) (Math.random() * 6);
        qDice = Integer.toString(diceNum);
        jTextField1.setText(qDice);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        diceNum = 1 +(int) (Math.random() * 4);
        qDice = Integer.toString(diceNum);
        jTextField1.setText(qDice);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tableCharacters.getSelectedRow();
        
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "No row is selected", "Select row to delete", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) tableCharacters.getModel();
            model.removeRow(row);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // save when closed
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        DefaultTableModel model = (DefaultTableModel) tableCharacters.getModel();
        Vector<Vector> tableData = model.getDataVector();
        
        //saving in file
        try {
            FileOutputStream file = new FileOutputStream("file.bin");
            ObjectOutputStream output = new ObjectOutputStream(file);
            
            //to serialize object
            output.writeObject(tableData);
            output.close();
            file.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    //open table from saved folder
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            FileInputStream file = new FileInputStream("file.bin");
            ObjectInputStream input = new ObjectInputStream(file);
            //to deserialize object
            Vector<Vector> tableData = (Vector<Vector>)input.readObject();
            input.close();
            file.close();
            
            DefaultTableModel model = (DefaultTableModel) tableCharacters.getModel();
            for (int i = 0; i < tableData.size(); i++) {
                Vector row = tableData.get(i);
                model.addRow(new Object[]{row.get(0), row.get(1), row.get(2), row.get(3), row.get(4), row.get(5), row.get(6), row.get(7)});
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRndPtsActionPerformed
        jTextScore1.setText(Integer.toString(randomRoll()));
        jTextScore2.setText(Integer.toString(randomRoll()));
        jTextScore3.setText(Integer.toString(randomRoll()));
        jTextScore4.setText(Integer.toString(randomRoll()));
        jTextScore5.setText(Integer.toString(randomRoll()));
        jTextScore6.setText(Integer.toString(randomRoll()));
    }//GEN-LAST:event_btnRndPtsActionPerformed

    private void jTextRaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextRaceActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        switch (jComboBox1.getSelectedIndex()) {
            case 0 -> jTextRaceDes.setText("Str Strength\n" +  "Dex Dexterity\n" +  "Con Constitution\n" +  "Int Intelligence\n" +  "Wis Wisdom\n" +  "Cha Charisma");
            case 1 -> jTextRaceDes.setText("High Elf\n" +  " +2 Con\n" +  " +1 Int");
            case 2 -> jTextRaceDes.setText("Wood Elf\n" +  " +2 Dex\n" +  " +1 Wis");
            case 3 -> jTextRaceDes.setText("Dark Elf\n" +  " +2 Dex\n" +  " +1 Cha");
            case 4 -> jTextRaceDes.setText("Dragonborn\n" +  " +2 Str\n" +  " +1 Cha");
            case 5 -> jTextRaceDes.setText("Hill Dwarf\n" +  " +2 Con\n" +  " +1 Wis");
            case 6 -> jTextRaceDes.setText("Mountain Dwarf\n" +  " +2 Str\n" +  " +2 Con");
            case 7 -> jTextRaceDes.setText("Lightfoot Halfling\n" +  " +2 Dex\n" +  " +1 Cha");
            case 8 -> jTextRaceDes.setText("Stout Halfling\n" +  " +1 Con");
            case 9 -> jTextRaceDes.setText("Forest Gnome\n" +  " +1 Dex\n" +  " +2 Int");
            case 10 -> jTextRaceDes.setText("Rock Gnome\n" +  " +2 Con\n" +  " +1 Int");
            case 11 -> jTextRaceDes.setText("Human\n" +  " +1 Str\n" +  " +1 Dex\n" +  " +1 Con\n" +  " +1 Int\n" +  " +1 Wis\n" +  " +1 Cha");
            case 12 -> jTextRaceDes.setText("Half-Elf\n" +  " +1 to two random\n" +  " +2 Cha");
            case 13 -> jTextRaceDes.setText("Half-Orc\n" +  " +2 Str\n" +  " +1 Con");
            case 14 -> jTextRaceDes.setText("Tiefling\n" +  " +2 Cha\n" +  " +1 Int");
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed
                                 

    private void btnRndPtsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jTextScore1.setText(Integer.toString(randomRoll()));
        jTextScore2.setText(Integer.toString(randomRoll()));
        jTextScore3.setText(Integer.toString(randomRoll()));
        jTextScore4.setText(Integer.toString(randomRoll()));
        jTextScore5.setText(Integer.toString(randomRoll()));
        jTextScore6.setText(Integer.toString(randomRoll()));
    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        jTextName.setText("");
        jTextRace.setSelectedIndex(0);
        jTextScore1.setText("");
        jTextScore2.setText("");
        jTextScore3.setText("");
        jTextScore4.setText("");
        jTextScore5.setText("");
        jTextScore6.setText("");
        jTextMod1.setText("");
        jTextMod2.setText("");
        jTextMod3.setText("");
        jTextMod4.setText("");
        jTextMod5.setText("");
        jTextMod6.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String name = jTextName.getText();
        yourName = name;
        
        
        switch (jTextRace.getSelectedIndex()) {
            case 0 -> race = "High Elf";
            case 1 -> race = "Wood Elf";
            case 2 -> race = "Dark Elf";
            case 3 -> race = "Dragonborn";
            case 4 -> race = "Hill Dwarf";
            case 5 -> race = "Mountain Dwarf";
            case 6 -> race = "Lightfoot Halfling";
            case 7 -> race = "Stout Halfling";
            case 8 -> race = "Forest Gnome";
            case 9 -> race = "Rock Gnome";
            case 10 -> race = "Human";
            case 11 -> race = "Half-Elf";
            case 12 -> race = "Half-Orc";
            case 13 -> race = "Tiefling";
        }
        
        
        
        /*
        High Elf = 0
        Wood Elf = 1
        Dark Elf = 2
        Dragonborn = 3
        Hill Dwarf = 4
        Mountain Dwarf = 5
        Lightfoot Halfling = 6
        Stout Halfling = 7
        Forest Gnome = 8
        Rock Gnome = 9
        Human = 10
        Half-Elf = 11
        Half-Orc = 12
        Tiefling = 13
        */
        
        String strengthP = jTextScore1.getText();
        String dexterityP = jTextScore2.getText();
        String constitutionP = jTextScore3.getText();
        String intelligenceP = jTextScore4.getText();
        String wisdomP = jTextScore5.getText();
        String charismaP = jTextScore6.getText();
        //skillP = the text box name, not the int variable name
        
        
        strPt = Integer.parseInt(strengthP);
        dexPt = Integer.parseInt(dexterityP);
        conPt = Integer.parseInt(constitutionP);
        intPt = Integer.parseInt(intelligenceP);
        wisPt = Integer.parseInt(wisdomP);
        chaPt = Integer.parseInt(charismaP);
        
        switch (jTextRace.getSelectedIndex()) {
            case 0 -> {
                dexPt += 2; intPt += 1;
            }
            case 1 -> {
                dexPt += 2; wisPt += 1;
            }
            case 2 -> {
                dexPt += 2; chaPt += 1;
            }
            case 3 -> {
                strPt += 2; chaPt += 1;
            }
            case 4 -> {
                conPt += 2; wisPt += 1;
            }
            case 5 -> { 
                strPt += 2; conPt += 2;
            }
            case 6 -> { 
                dexPt += 2; chaPt += 1;
            }
            case 7 -> { 
                conPt += 1;
            }
            case 8 -> {
                dexPt += 1; intPt += 2;
            }
            case 9 -> { 
                conPt += 2; intPt += 1;
            }
            case 10 -> {
                strPt += 1; dexPt += 1; conPt += 1; intPt += 1; wisPt += 1; chaPt += 1;
            }
            case 11 -> {
                dexPt += 1; //
                intPt += 1; //
                chaPt += 2;
            }
            case 12 -> { 
                strPt += 2; conPt += 1;
            }
            case 13 -> {
                chaPt += 2; intPt += 1;
            }
        }
        
        //modifying the Point numbers done - now set the text boxes to the updated values
        jTextScore1.setText(Integer.toString(strPt));
        jTextScore2.setText(Integer.toString(dexPt));
        jTextScore3.setText(Integer.toString(conPt));
        jTextScore4.setText(Integer.toString(intPt));
        jTextScore5.setText(Integer.toString(wisPt));
        jTextScore6.setText(Integer.toString(chaPt));
        
        
        
        // setting the modifier values from the point inputs
        //strength
        switch (Integer.parseInt(strengthP)){
        case 1 -> strMd = -5;
        case 2, 3 -> strMd = -4;
        case 4, 5 -> strMd = -3;
        case 6, 7 -> strMd = -2;
        case 8, 9 -> strMd = -1;
        case 10, 11 -> strMd = 0;
        case 12, 13 -> strMd = 1;
        case 14, 15 -> strMd = 2;
        case 16, 17 -> strMd = 3;
        case 18, 19 -> strMd = 4;
        case 20, 21 -> strMd = 5;
        case 22, 23 -> strMd = 6;
        case 24, 25 -> strMd = 7;
        case 26, 27 -> strMd = 8;
        case 28, 29 -> strMd = 9;
        case 30 -> strMd = 10;
        }
        
        //dexterity
        switch (Integer.parseInt(dexterityP)){
        case 1 -> dexMd = -5;
        case 2, 3 -> dexMd = -4;
        case 4, 5 -> dexMd = -3;
        case 6, 7 -> dexMd = -2;
        case 8, 9 -> dexMd = -1;
        case 10, 11 -> dexMd = 0;
        case 12, 13 -> dexMd = 1;
        case 14, 15 -> dexMd = 2;
        case 16, 17 -> dexMd = 3;
        case 18, 19 -> dexMd = 4;
        case 20, 21 -> dexMd = 5;
        case 22, 23 -> dexMd = 6;
        case 24, 25 -> dexMd = 7;
        case 26, 27 -> dexMd = 8;
        case 28, 29 -> dexMd = 9;
        case 30 -> dexMd = 10;
        }
        
        //constitution
        switch (Integer.parseInt(constitutionP)){
        case 1 -> conMd = -5;
        case 2, 3 -> conMd = -4;
        case 4, 5 -> conMd = -3;
        case 6, 7 -> conMd = -2;
        case 8, 9 -> conMd = -1;
        case 10, 11 -> conMd = 0;
        case 12, 13 -> conMd = 1;
        case 14, 15 -> conMd = 2;
        case 16, 17 -> conMd = 3;
        case 18, 19 -> conMd = 4;
        case 20, 21 -> conMd = 5;
        case 22, 23 -> conMd = 6;
        case 24, 25 -> conMd = 7;
        case 26, 27 -> conMd = 8;
        case 28, 29 -> conMd = 9;
        case 30 -> conMd = 10;
        }
        
        //intelligence
        switch (Integer.parseInt(intelligenceP)){
        case 1 -> intMd = -5;
        case 2, 3 -> intMd = -4;
        case 4, 5 -> intMd = -3;
        case 6, 7 -> intMd = -2;
        case 8, 9 -> intMd = -1;
        case 10, 11 -> intMd = 0;
        case 12, 13 -> intMd = 1;
        case 14, 15 -> intMd = 2;
        case 16, 17 -> intMd = 3;
        case 18, 19 -> intMd = 4;
        case 20, 21 -> intMd = 5;
        case 22, 23 -> intMd = 6;
        case 24, 25 -> intMd = 7;
        case 26, 27 -> intMd = 8;
        case 28, 29 -> intMd = 9;
        case 30 -> intMd = 10;
        }
        
        
        //wisdom
        switch (Integer.parseInt(wisdomP)){
        case 1 -> wisMd = -5;
        case 2, 3 -> wisMd = -4;
        case 4, 5 -> wisMd = -3;
        case 6, 7 -> wisMd = -2;
        case 8, 9 -> wisMd = -1;
        case 10, 11 -> wisMd = 0;
        case 12, 13 -> wisMd = 1;
        case 14, 15 -> wisMd = 2;
        case 16, 17 -> wisMd = 3;
        case 18, 19 -> wisMd = 4;
        case 20, 21 -> wisMd = 5;
        case 22, 23 -> wisMd = 6;
        case 24, 25 -> wisMd = 7;
        case 26, 27 -> wisMd = 8;
        case 28, 29 -> wisMd = 9;
        case 30 -> wisMd = 10;
        }
        
        
        //charisma
        switch (Integer.parseInt(charismaP)){
        case 1 -> chaMd = -5;
        case 2, 3 -> chaMd = -4;
        case 4, 5 -> chaMd = -3;
        case 6, 7 -> chaMd = -2;
        case 8, 9 -> chaMd = -1;
        case 10, 11 -> chaMd = 0;
        case 12, 13 -> chaMd = 1;
        case 14, 15 -> chaMd = 2;
        case 16, 17 -> chaMd = 3;
        case 18, 19 -> chaMd = 4;
        case 20, 21 -> chaMd = 5;
        case 22, 23 -> chaMd = 6;
        case 24, 25 -> chaMd = 7;
        case 26, 27 -> chaMd = 8;
        case 28, 29 -> chaMd = 9;
        case 30 -> chaMd = 10;
        }
        
        
        
        
        
        //setting all of the modifier texts to the corresponding value. AFTER doing the racial modifiers
        jTextMod1.setText(Integer.toString(strMd));
        jTextMod2.setText(Integer.toString(dexMd));
        jTextMod3.setText(Integer.toString(conMd));
        jTextMod4.setText(Integer.toString(intMd));
        jTextMod5.setText(Integer.toString(wisMd));
        jTextMod6.setText(Integer.toString(chaMd));
        
        //making sure all input is filled
        if (name.isEmpty() || race.isEmpty() || strengthP.isEmpty() || dexterityP.isEmpty() || constitutionP.isEmpty() || intelligenceP.isEmpty() || wisdomP.isEmpty() || charismaP.isEmpty() || 
                Integer.parseInt(strengthP) < 1 || Integer.parseInt(strengthP) > 30 || Integer.parseInt(dexterityP) < 1 || Integer.parseInt(dexterityP) > 30 || 
                Integer.parseInt(constitutionP) < 1 || Integer.parseInt(constitutionP) > 30 || Integer.parseInt(intelligenceP) < 1 || Integer.parseInt(intelligenceP) > 30 ||
                Integer.parseInt(wisdomP) < 1 || Integer.parseInt(wisdomP) > 30 || Integer.parseInt(charismaP) < 1 || Integer.parseInt(charismaP) > 30) {
            JOptionPane.showMessageDialog(this, 
                    "Fill in Name, Race, and all Point values", 
                    "Try again. Points must be 1 to 30", 
                    JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) tableCharacters.getModel();
            model.addRow(new Object[]{name, race, strengthP, dexterityP, constitutionP, intelligenceP, wisdomP, charismaP});
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void jTextMod5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMod5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextMod5ActionPerformed

    private void jTextMod3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMod3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextMod3ActionPerformed

    private void jTextMod1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMod1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextMod1ActionPerformed

    private void jTextNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNameActionPerformed

    private void strPNGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_strPNGMouseClicked
        int tempRollVal = randomRoll();
        jTextScore1.setText(Integer.toString(tempRollVal));
        strPt = tempRollVal;
    }//GEN-LAST:event_strPNGMouseClicked

    private void dexPNGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dexPNGMouseClicked
        int tempRollVal = randomRoll();
        jTextScore2.setText(Integer.toString(tempRollVal));
        dexPt = tempRollVal;
    }//GEN-LAST:event_dexPNGMouseClicked

    private void conPNGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conPNGMouseClicked
        int tempRollVal = randomRoll();
        jTextScore3.setText(Integer.toString(tempRollVal));
        conPt = tempRollVal;
    }//GEN-LAST:event_conPNGMouseClicked

    private void intPNGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_intPNGMouseClicked
        int tempRollVal = randomRoll();
        jTextScore4.setText(Integer.toString(tempRollVal));
        intPt = tempRollVal;
    }//GEN-LAST:event_intPNGMouseClicked

    private void wisPNGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wisPNGMouseClicked
        int tempRollVal = randomRoll();
        jTextScore5.setText(Integer.toString(tempRollVal));
        wisPt = tempRollVal;
    }//GEN-LAST:event_wisPNGMouseClicked

    private void chaPNGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chaPNGMouseClicked
        int tempRollVal = randomRoll();
        jTextScore6.setText(Integer.toString(tempRollVal));
        chaPt = tempRollVal;
    }//GEN-LAST:event_chaPNGMouseClicked

    private void jPanel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel13MouseClicked
        jTabbedPane1.setSelectedIndex(4);
        jPanel4.setBackground(new java.awt.Color(242,242,242));
        jPanel5.setBackground(new java.awt.Color(242,242,242));
        jPanel6.setBackground(new java.awt.Color(242,242,242));
        jPanel8.setBackground(new java.awt.Color(242,242,242)); 
        jPanel13.setBackground(new java.awt.Color(153, 153, 153)); 
        jPanel15.setBackground(new java.awt.Color(242,242,242)); 
    }//GEN-LAST:event_jPanel13MouseClicked

    private void jPanel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel15MouseClicked
        jTabbedPane1.setSelectedIndex(5);
        jPanel4.setBackground(new java.awt.Color(242,242,242));
        jPanel5.setBackground(new java.awt.Color(242,242,242));
        jPanel6.setBackground(new java.awt.Color(242,242,242));
        jPanel8.setBackground(new java.awt.Color(242,242,242)); 
        jPanel13.setBackground(new java.awt.Color(242,242,242)); 
        jPanel15.setBackground(new java.awt.Color(153, 153, 153)); 
    }//GEN-LAST:event_jPanel15MouseClicked

    private void rangeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rangeTextActionPerformed

    
    private void bard0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bard0MouseClicked
        switch (bard0.getSelectedIndex()) {
            case 0 -> spell = "Blade Ward";
            case 1 -> spell = "Dancing Lights";
            case 2 -> spell = "Friends";
            case 3 -> spell = "Light";
            case 4 -> spell = "Mage Hand";
            case 5 -> spell = "Mending";
            case 6 -> spell = "Message";
            case 7 -> spell = "Minor Illusion";
            case 8 -> spell = "Prestidigitation";
            case 9 -> spell = "True Strike";
            case 10 -> spell = "Vicious Mockery";
        }
        bard1.clearSelection();
        setSpell0();
    }//GEN-LAST:event_bard0MouseClicked

    private void bard1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bard1MouseClicked
        switch (bard1.getSelectedIndex()) {
            case 0 -> spell =  "Animal Friendship";
            case 1 -> spell =  "Bane";
            case 2 -> spell =  "Charm Person";
            case 3 -> spell =  "Comprehend Languages";
            case 4 -> spell =  "Cure Wounds";
            case 5 -> spell =  "Detect Magic";
            case 6 -> spell =  "Disguise Self";
            case 7 -> spell =  "Dissonant Whispers";
            case 8 -> spell =  "Faerie Fire";
            case 9 -> spell =  "Feather Fall";
            case 10 -> spell =  "Healing Word";
            case 11 -> spell =  "Heroism";
            case 12 -> spell =  "Identify";
            case 13 -> spell =  "Illusory Script";
            case 14 -> spell =  "Longstrider";
            case 15 -> spell =  "Silent Image";
            case 16 -> spell =  "Sleep";
            case 17 -> spell =  "Speak with Animals";
            case 18 -> spell =  "Tasha's Hideous Laughter";
            case 19 -> spell =  "Thunderwave";
            case 20 -> spell =  "Unseen Servant";
        }
        bard0.clearSelection();
        setSpell1();
    }//GEN-LAST:event_bard1MouseClicked

    private void cleric0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cleric0MouseClicked
        switch (cleric0.getSelectedIndex()) {
            case 0 -> spell =  "Guidance";
            case 1 -> spell =  "Light";
            case 2 -> spell =  "Mending";
            case 3 -> spell =  "Resistance";
            case 4 -> spell =  "Sacred Flame";
            case 5 -> spell =  "Spare the Dying";
            case 6 -> spell =  "Thaumaturgy";
        }
        cleric1.clearSelection();
        setSpell0();
    }//GEN-LAST:event_cleric0MouseClicked

    private void cleric1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cleric1MouseClicked
        switch (cleric1.getSelectedIndex()) {
            case 0 -> spell =  "Bane";
            case 1 -> spell =  "Bless";
            case 2 -> spell =  "Command";
            case 3 -> spell =  "Create or Destroy Water";
            case 4 -> spell =  "Cure Wounds";
            case 5 -> spell =  "Detect Evil and Good";
            case 6 -> spell =  "Detect Magic";
            case 7 -> spell =  "Detect Poison and Disease";
            case 8 -> spell =  "Guiding Bolt";
            case 9 -> spell =  "Healing Word";
            case 10 -> spell =  "Inflict Wounds";
            case 11 -> spell =  "Protection from Evil and Good";
            case 12 -> spell =  "Purify Food and Drink";
            case 13 -> spell =  "Sanctuary";
            case 14 -> spell =  "Shield of Faith";
        }
        cleric0.clearSelection();
        setSpell1();
    }//GEN-LAST:event_cleric1MouseClicked

    private void druid0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_druid0MouseClicked
        switch (druid0.getSelectedIndex()) {
            case 0 -> spell =  "Druidcraft";
            case 1 -> spell =  "Guidance";
            case 2 -> spell =  "Mending";
            case 3 -> spell =  "Poison Spray";
            case 4 -> spell =  "Produce Flame";
            case 5 -> spell =  "Resistance";
            case 6 -> spell =  "Shillelagh";
            case 7 -> spell =  "Thorn Whip";
        }
        druid1.clearSelection();
        setSpell0();
    }//GEN-LAST:event_druid0MouseClicked

    private void druid1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_druid1MouseClicked
        switch (druid1.getSelectedIndex()) {
            case 0 -> spell =  "Animal Friendship";
            case 1 -> spell =  "Charm Person";
            case 2 -> spell =  "Create or Destroy Water";
            case 3 -> spell =  "Cure Wounds";
            case 4 -> spell =  "Detect Magic";
            case 5 -> spell =  "Detect Poison and Disease";
            case 6 -> spell =  "Entangle";
            case 7 -> spell =  "Faerie Fire";
            case 8 -> spell =  "Fog Cloud";
            case 9 -> spell =  "Goodberry";
            case 10 -> spell =  "Healing Word";
            case 11 -> spell =  "Jump";
            case 12 -> spell =  "Longstrider";
            case 13 -> spell =  "Purify Food and Drink";
            case 14 -> spell =  "Speak with Animals";
            case 15 -> spell =  "Thunderwave";
        }
        druid0.clearSelection();
        setSpell1();
    }//GEN-LAST:event_druid1MouseClicked

    private void paladin1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paladin1MouseClicked
        switch (paladin1.getSelectedIndex()) {
        case 0 -> spell =  "Bless";
        case 1 -> spell =  "Command";
        case 2 -> spell =  "Compelled Duel";
        case 3 -> spell =  "Cure Wounds";
        case 4 -> spell =  "Detect Evil and Good";
        case 5 -> spell =  "Detect Magic";
        case 6 -> spell =  "Detect Poison and Disease";
        case 7 -> spell =  "Divine Favor";
        case 8 -> spell =  "Heroism";
        case 9 -> spell =  "Protection from Evil and Good";
        case 10 -> spell =  "Purify Food and Drink";
        case 11 -> spell =  "Searing Smite";
        case 12 -> spell =  "Shield of Faith";
        case 13 -> spell =  "Thunderous Smite";
        case 14 -> spell =  "Wrathful Smite";
        }
        setSpell1();
    }//GEN-LAST:event_paladin1MouseClicked

    private void ranger1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ranger1MouseClicked
        switch (ranger1.getSelectedIndex()) {
            case 0 -> spell =  "Alarm";
            case 1 -> spell =  "Animal Friendship";
            case 2 -> spell =  "Cure Wounds";
            case 3 -> spell =  "Detect Magic Detect Poison and Disease";
            case 4 -> spell =  "Ensnaring Strike";
            case 5 -> spell =  "Fod Cloud";
            case 6 -> spell =  "Goodberry";
            case 7 -> spell =  "Hail of Thorns";
            case 8 -> spell =  "Hunter's Mark";
            case 9 -> spell =  "Jump";
            case 10 -> spell =  "Longstrider";
            case 11 -> spell =  "Speak with Animals";
        }
        setSpell1();
    }//GEN-LAST:event_ranger1MouseClicked

    private void sorcerer0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sorcerer0MouseClicked
        switch (sorcerer0.getSelectedIndex()) {
        case 0 -> spell =  "Acid Splash";
        case 1 -> spell =  "Blade Ward";
        case 2 -> spell =  "Chill Touch";
        case 3 -> spell =  "Dancing Lights";
        case 4 -> spell =  "Fire Bolt";
        case 5 -> spell =  "Friends";
        case 6 -> spell =  "Light";
        case 7 -> spell =  "Mage Hand";
        case 8 -> spell =  "Mending";
        case 9 -> spell =  "Message";
        case 10 -> spell =  "Minor Illusion";
        case 11 -> spell =  "Poison Spray";
        case 12 -> spell =  "Prestidigitation";
        case 13 -> spell =  "Ray of Frost";
        case 14 -> spell =  "Shocking Grasp";
        case 15 -> spell =  "True Strike";
        }
        sorcerer1.clearSelection();
        setSpell0();
    }//GEN-LAST:event_sorcerer0MouseClicked

    private void sorcerer1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sorcerer1MouseClicked
        switch (sorcerer1.getSelectedIndex()) {
            case 0 -> spell =  "Burning Hands";
            case 1 -> spell =  "Charm Person";
            case 2 -> spell =  "Chromatic Orb";
            case 3 -> spell =  "Color Spray";
            case 4 -> spell =  "Comprehend Languages";
            case 5 -> spell =  "Detect Magic";
            case 6 -> spell =  "Disguise Self";
            case 7 -> spell =  "Expeditious Retreat";
            case 8 -> spell =  "False Life";
            case 9 -> spell =  "Feather Fall";
            case 10 -> spell =  "Fog Cloud";
            case 11 -> spell =  "Jump";
            case 12 -> spell =  "Mage Armor";
            case 13 -> spell =  "Magic Missile";
            case 14 -> spell =  "Ray of Sickness";
            case 15 -> spell =  "Shield";
            case 16 -> spell =  "Silent Image";
        }
        sorcerer0.clearSelection();
        setSpell1();
    }//GEN-LAST:event_sorcerer1MouseClicked

    private void warlock0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_warlock0MouseClicked
        switch (warlock0.getSelectedIndex()) {
            case 0 -> spell =  "Blade Ward";
            case 1 -> spell =  "Chill Touch";
            case 2 -> spell =  "Eldritch Blast";
            case 3 -> spell =  "Friends";
            case 4 -> spell =  "Mage Hand";
            case 5 -> spell =  "Minor Illusion";
            case 6 -> spell =  "Poison Spray";
            case 7 -> spell =  "Prestidigitation";
            case 8 -> spell =  "True Strike";
        }
        warlock1.clearSelection();
        setSpell0();
    }//GEN-LAST:event_warlock0MouseClicked

    private void warlock1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_warlock1MouseClicked
        switch (warlock1.getSelectedIndex()) {
            case 0 -> spell =  "Armor of Agathys";
            case 1 -> spell =  "Arms of Hadar";
            case 2 -> spell =  "Charm Person";
            case 3 -> spell =  "Comprehend Languages";
            case 4 -> spell =  "Expeditious Retreat";
            case 5 -> spell =  "Hellish Rebuke";
            case 6 -> spell =  "Hex";
            case 7 -> spell =  "Illusory Script";
            case 8 -> spell =  "Protection from Evil and Good";
            case 9 -> spell =  "Unseen Servant";
            case 10 -> spell =  "Witch Bolt";
        }
        warlock0.clearSelection();
        setSpell1();
    }//GEN-LAST:event_warlock1MouseClicked

    private void wizard0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wizard0MouseClicked
        switch (wizard0.getSelectedIndex()) {
            case 0 -> spell =  "Acid Splash";
            case 1 -> spell =  "Blade Ward";
            case 2 -> spell =  "Chill Touch";
            case 3 -> spell =  "Dancing Lights";
            case 4 -> spell =  "Fire Bolt";
            case 5 -> spell =  "Friends";
            case 6 -> spell =  "Light";
            case 7 -> spell =  "Mage Hand";
            case 8 -> spell =  "Mending";
            case 9 -> spell =  "Message";
            case 10 -> spell =  "Minor Illusion";
            case 11 -> spell =  "Poison Spray";
            case 12 -> spell =  "Prestidigitation";
            case 13 -> spell =  "Ray of Frost";
            case 14 -> spell =  "Shocking Grasp";
            case 15 -> spell =  "True Strike";
        }
        wizard1.clearSelection();
        setSpell0();
    }//GEN-LAST:event_wizard0MouseClicked

    private void wizard1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wizard1MouseClicked
        switch (wizard1.getSelectedIndex()) {
            case 0 -> spell =  "Alarm";
            case 1 -> spell =  "Burning Hands";
            case 2 -> spell =  "Charm Person";
            case 3 -> spell =  "Chromatic Orb";
            case 4 -> spell =  "Color Spray";
            case 5 -> spell =  "Comprehend Languages";
            case 6 -> spell =  "Detect Magic";
            case 7 -> spell =  "Disguise Self";
            case 8 -> spell =  "Expeditious Retreat";
            case 9 -> spell =  "False Life";
            case 10 -> spell =  "Feather Fall";
            case 11 -> spell =  "Find Familiar";
            case 12 -> spell =  "Fog Cloud";
            case 13 -> spell =  "Grease";
            case 14 -> spell =  "Identify";
            case 15 -> spell =  "Illusory Script";
            case 16 -> spell =  "Jump";
            case 17 -> spell =  "Longstrider";
            case 18 -> spell =  "Mage Armor";
            case 19 -> spell =  "Magic Missile";
            case 20 -> spell =  "Protection from Evil and Good";
            case 21 -> spell =  "Ray of Sickness";
            case 22 -> spell =  "Shield";
            case 23 -> spell =  "Silent Image";
            case 24 -> spell =  "Sleep";
            case 25 -> spell =  "Tasha's Hideous Laughter";
            case 26 -> spell =  "Tenser's Floating Disk";
            case 27 -> spell =  "Thunderwave";
            case 28 -> spell =  "Unseen Servant";
            case 29 -> spell =  "Witch Bolt";
        }
        wizard0.clearSelection();
        setSpell1();
    }//GEN-LAST:event_wizard1MouseClicked

    
    public void setSpell0() {
        switch (spell) {
            case "Acid Splash":
                spellNameText.setText("Acid Splash");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Blade Ward":
                spellNameText.setText("Blade Ward");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("1 round");
                concentrationText.setText("false");
                break;
            case "Chill Touch":
                spellNameText.setText("Chill Touch");
                castingTimeText.setText("1 action");
                rangeText.setText("120");
                componentsText.setText("V, S");
                durationText.setText("1 round");
                concentrationText.setText("false");
                break;
            case "Dancing Lights":
                spellNameText.setText("Dancing Lights");
                castingTimeText.setText("1 action");
                rangeText.setText("120");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            case "Druidcraft":
                spellNameText.setText("Druidcraft");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Eldritch Blast":
                spellNameText.setText("Eldritch Blast");
                castingTimeText.setText("1 action");
                rangeText.setText("120");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Fire Bolt":
                spellNameText.setText("Fire Bolt");
                castingTimeText.setText("1 action");
                rangeText.setText("120");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Friends":
                spellNameText.setText("Friends");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("S, M");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            case "Guidance":
                spellNameText.setText("Guidance");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            case "Light":
                spellNameText.setText("Light");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, M");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Mage Hand":
                spellNameText.setText("Mage Hand");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S");
                durationText.setText("1 min");
                concentrationText.setText("false");
                break;
            case "Mending":
                spellNameText.setText("Mending");
                castingTimeText.setText("1 min");
                rangeText.setText("Touch");
                componentsText.setText("V, S, M");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Message":
                spellNameText.setText("Message");
                castingTimeText.setText("1 action");
                rangeText.setText("120");
                componentsText.setText("V, S, M");
                durationText.setText("1 round");
                concentrationText.setText("false");
                break;
            case "Minor Illusion":
                spellNameText.setText("Minor Illusion");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("S, M");
                durationText.setText("1 min");
                concentrationText.setText("false");
                break;
            case "Poison Spray":
                spellNameText.setText("Poison Spray");
                castingTimeText.setText("1 action");
                rangeText.setText("10");
                componentsText.setText("V, S");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Prestidigitation":
                spellNameText.setText("Prestidigitation");
                castingTimeText.setText("1 action");
                rangeText.setText("10");
                componentsText.setText("V, S");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Produce Flame":
                spellNameText.setText("Produce Flame");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("10 min");
                concentrationText.setText("false");
                break;
            case "Ray of Frost":
                spellNameText.setText("Ray of Frost");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Resistance":
                spellNameText.setText("Resistance");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            case "Sacred Flame":
                spellNameText.setText("Sacred Flame");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Shillelagh":
                spellNameText.setText("Shillelagh");
                castingTimeText.setText("1 bonus action");
                rangeText.setText("Touch");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("false");
                break;
            case "Shocking Grasp":
                spellNameText.setText("Shocking Grasp");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Spare the Dying":
                spellNameText.setText("Spare the Dying");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Thaumaturgy":
                spellNameText.setText("Thaumaturgy");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V");
                durationText.setText("1 minute");
                concentrationText.setText("false");
                break;
            case "Thorn Whip":
                spellNameText.setText("Thorn Whip");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "True Strike":
                spellNameText.setText("True Strike");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("S");
                durationText.setText("1 round");
                concentrationText.setText("true");
                break;
            case "Vicious Mockery":
                spellNameText.setText("Vicious Mockery");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            default:
                spellNameText.setText("");
                castingTimeText.setText("");
                rangeText.setText("");
                componentsText.setText("");
                durationText.setText("");
                concentrationText.setText("");
                break;
        }
    }
    
    public void setSpell1() {
        switch (spell) {
            case "Alarm":
                spellNameText.setText("Alarm");
                castingTimeText.setText("1 min");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("8 hours");
                concentrationText.setText("false");
                break;
            case "Animal Friendship":
                spellNameText.setText("Animal Friendship");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("24 hours");
                concentrationText.setText("false");
                break;
            case "Armor of Agathys":
                spellNameText.setText("Armor of Agathys");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S, M");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Arms of Hadar":
                spellNameText.setText("Arms of Hadar");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Bane":
                spellNameText.setText("Bane");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            case "Bless":
                spellNameText.setText("Bless");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            case "Burning Hands":
                spellNameText.setText("Burning Hands");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Charm Person":
                spellNameText.setText("Charm Person");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Chromatic Orb":
                spellNameText.setText("Chromatic Orb");
                castingTimeText.setText("1 action");
                rangeText.setText("90");
                componentsText.setText("V, S, M");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Color Spray":
                spellNameText.setText("Color Spray");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S, M");
                durationText.setText("1 round");
                concentrationText.setText("false");
                break;
            case "Command":
                spellNameText.setText("Command");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V");
                durationText.setText("1 round");
                concentrationText.setText("false");
                break;
            case "Comprehend Languages":
                spellNameText.setText("Comprehend Languages");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S, M");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Create or Destroy Water":
                spellNameText.setText("Create or Destroy Water");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Cure Wounds":
                spellNameText.setText("Cure Wounds");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Detect Evil and Good":
                spellNameText.setText("Detect Evil and Good");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("10 min");
                concentrationText.setText("true");
                break;
            case "Detect Magic":
                spellNameText.setText("Detect Magic");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S, M");
                durationText.setText("10 min");
                concentrationText.setText("true");
                break;
            case "Detect Poison and Disease":
                spellNameText.setText("Detect Poison and Disease");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S, M");
                durationText.setText("10 min");
                concentrationText.setText("true");
                break;
            case "Disguise Self":
                spellNameText.setText("Disguise Self");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Dissonant Whispers":
                spellNameText.setText("Dissonant Whispers");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Entangle":
                spellNameText.setText("Entangle");
                castingTimeText.setText("1 action");
                rangeText.setText("90");
                componentsText.setText("V, S");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            case "Expeditious Retreat":
                spellNameText.setText("Expeditious Retreat");
                castingTimeText.setText("1 bonus action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("10 min");
                concentrationText.setText("true");
                break;
            case "False Life":
                spellNameText.setText("False Life");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S, M");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Faerie Fire":
                spellNameText.setText("Faerie Fire");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            case "Feather Fall":
                spellNameText.setText("Feather Fall");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V, M");
                durationText.setText("1 min");
                concentrationText.setText("false");
                break;
            case "Find Familiar":
                spellNameText.setText("Find Familiar");
                castingTimeText.setText("1 hour");
                rangeText.setText("10");
                componentsText.setText("V, S, M");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Fog Cloud":
                spellNameText.setText("Fog Cloud");
                castingTimeText.setText("1 action");
                rangeText.setText("120");
                componentsText.setText("V, S");
                durationText.setText("1 hour");
                concentrationText.setText("true");
                break;
            case "Grease":
                spellNameText.setText("Grease");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("false");
                break;
            case "Guiding Bolt":
                spellNameText.setText("Guiding Bolt");
                castingTimeText.setText("1 action");
                rangeText.setText("120");
                componentsText.setText("V, S");
                durationText.setText("1 round");
                concentrationText.setText("false");
                break;
            case "Goodberry":
                spellNameText.setText("Goodberry");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S, M");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Healing Word":
                spellNameText.setText("Healing Word");
                castingTimeText.setText("1 bonus action");
                rangeText.setText("60");
                componentsText.setText("V");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Hellish Rebuke":
                spellNameText.setText("Hellish Rebuke");
                castingTimeText.setText("1 reaction");
                rangeText.setText("60");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Heroism":
                spellNameText.setText("Heroism");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S");
                durationText.setText("1 min");
                concentrationText.setText("True");
                break;
            case "Hex":
                spellNameText.setText("Hex");
                castingTimeText.setText("1 bonus action");
                rangeText.setText("90");
                componentsText.setText("V, S, M");
                durationText.setText("1 hour");
                concentrationText.setText("true");
                break;
            case "Identify":
                spellNameText.setText("Identify");
                castingTimeText.setText("1 min");
                rangeText.setText("Touch");
                componentsText.setText("V, S, M");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Illusory Script":
                spellNameText.setText("Illusiory Script");
                castingTimeText.setText("1 min");
                rangeText.setText("Touch");
                componentsText.setText("S, M");
                durationText.setText("10 days");
                concentrationText.setText("false");
                break;
            case "Illusiory Script":
                spellNameText.setText("Illusiory Script");
                castingTimeText.setText("1 min");
                rangeText.setText("Touch");
                componentsText.setText("S, M");
                durationText.setText("10 days");
                concentrationText.setText("false");
                break;
            case "Inflict Wounds":
                spellNameText.setText("Inflict Wounds");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Jump":
                spellNameText.setText("Jump");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S, M");
                durationText.setText("8 hours");
                concentrationText.setText("false");
                break;
            case "Longstrider":
                spellNameText.setText("Longstrider");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S, M");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Mage Armor":
                spellNameText.setText("Mage Armor");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S, M");
                durationText.setText("8 hours");
                concentrationText.setText("false");
                break;
            case "Magic Missile":
                spellNameText.setText("Magic Missile");
                castingTimeText.setText("1 action");
                rangeText.setText("120");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Protection from Evil and Good":
                spellNameText.setText("Protection from Evil and Good");
                castingTimeText.setText("1 action");
                rangeText.setText("Touch");
                componentsText.setText("V, S, M");
                durationText.setText("10 min");
                concentrationText.setText("true");
                break;
            case "Purify Food and Drink":
                spellNameText.setText("Purify Food and Drink");
                castingTimeText.setText("1 action");
                rangeText.setText("10");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Ray of Sickness":
                spellNameText.setText("Ray of Sickness");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Sanctuary":
                spellNameText.setText("Sanctuary");
                castingTimeText.setText("1 bonus action");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("false");
                break;
            case "Shield":
                spellNameText.setText("Shield");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("1 round");
                concentrationText.setText("false");
                break;
            case "Shield of Faith":
                spellNameText.setText("Shield of Faith");
                castingTimeText.setText("1 bonus action");
                rangeText.setText("60");
                componentsText.setText("V, S, M");
                durationText.setText("10 min");
                concentrationText.setText("true");
                break;
            case "Silent Image":
                spellNameText.setText("Silent Image");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V, S, M");
                durationText.setText("10 min");
                concentrationText.setText("true");
                break;
            case "Sleep":
                spellNameText.setText("Sleep");
                castingTimeText.setText("1 action");
                rangeText.setText("90");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("false");
                break;
            case "Speak with Animals":
                spellNameText.setText("Speak with Animals");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("10 min");
                concentrationText.setText("false");
                break;
            case "Tasha's Hideous Laughter":
                spellNameText.setText("Tasha's Hideous Laughter");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            case "Tenser's Floating Disk":
                spellNameText.setText("Tenser’s Floating Disk");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Thunderwave":
                spellNameText.setText("Thunderwave");
                castingTimeText.setText("1 action");
                rangeText.setText("Self");
                componentsText.setText("V, S");
                durationText.setText("Instantaneous");
                concentrationText.setText("false");
                break;
            case "Unseen Servant":
                spellNameText.setText("Unseen Servant");
                castingTimeText.setText("1 action");
                rangeText.setText("60");
                componentsText.setText("V, S, M");
                durationText.setText("1 hour");
                concentrationText.setText("false");
                break;
            case "Witch Bolt":
                spellNameText.setText("Witch Bolt");
                castingTimeText.setText("1 action");
                rangeText.setText("30");
                componentsText.setText("V, S, M");
                durationText.setText("1 min");
                concentrationText.setText("true");
                break;
            default:
                spellNameText.setText("");
                castingTimeText.setText("");
                rangeText.setText("");
                componentsText.setText("");
                durationText.setText("");
                concentrationText.setText("");
                break;
        }
    }
    
    
    
    
    
    public int randomRoll() {
        int[] tempArray = new int[4];
        int total;
        int diceRole;
        
        for(int j=0; j<tempArray.length; j++){
                diceRole = 1 +(int) (Math.random() * 6);
                tempArray[j] = diceRole;
            }
        Arrays.sort(tempArray);
        total = tempArray[1] + tempArray[2] + tempArray[3];
        return total;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel barbarianL;
    private javax.swing.JTextArea barbarianTA;
    private javax.swing.JList<String> bard0;
    private javax.swing.JList<String> bard1;
    private javax.swing.JPanel bardTab;
    private javax.swing.JButton btnRndPts;
    private javax.swing.JLabel castingTimeLabel;
    private javax.swing.JTextField castingTimeText;
    private javax.swing.JLabel chaPNG;
    private javax.swing.JList<String> cleric0;
    private javax.swing.JList<String> cleric1;
    private javax.swing.JPanel clericTab;
    private javax.swing.JLabel componentsLabel;
    private javax.swing.JTextField componentsText;
    private javax.swing.JLabel conPNG;
    private javax.swing.JLabel concentrationLabel;
    private javax.swing.JTextField concentrationText;
    private javax.swing.JLabel dexPNG;
    private javax.swing.JList<String> druid0;
    private javax.swing.JList<String> druid1;
    private javax.swing.JPanel druidTab;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JTextField durationText;
    private javax.swing.JLabel fighterL;
    private javax.swing.JTextArea fighterTA;
    private javax.swing.JLabel intPNG;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextMod1;
    private javax.swing.JTextField jTextMod2;
    private javax.swing.JTextField jTextMod3;
    private javax.swing.JTextField jTextMod4;
    private javax.swing.JTextField jTextMod5;
    private javax.swing.JTextField jTextMod6;
    private javax.swing.JTextField jTextName;
    private javax.swing.JComboBox<String> jTextRace;
    private javax.swing.JTextArea jTextRaceDes;
    private javax.swing.JTextField jTextScore1;
    private javax.swing.JTextField jTextScore2;
    private javax.swing.JTextField jTextScore3;
    private javax.swing.JTextField jTextScore4;
    private javax.swing.JTextField jTextScore5;
    private javax.swing.JTextField jTextScore6;
    private javax.swing.JPanel jp1;
    private javax.swing.JPanel jp2;
    private javax.swing.JPanel jp3;
    private javax.swing.JPanel jp4;
    private javax.swing.JPanel jp5;
    private javax.swing.JPanel jp6;
    private javax.swing.JLabel monkL;
    private javax.swing.JTextArea monkTA;
    private javax.swing.JList<String> paladin0;
    private javax.swing.JList<String> paladin1;
    private javax.swing.JLabel paladinL;
    private javax.swing.JTextArea paladinTA;
    private javax.swing.JPanel paladinTab;
    private javax.swing.JLabel rangeLabel;
    private javax.swing.JTextField rangeText;
    private javax.swing.JList<String> ranger0;
    private javax.swing.JList<String> ranger1;
    private javax.swing.JLabel rangerL;
    private javax.swing.JTextArea rangerTA;
    private javax.swing.JPanel rangerTab;
    private javax.swing.JLabel rogueL;
    private javax.swing.JTextArea rogueTA;
    private javax.swing.JList<String> sorcerer0;
    private javax.swing.JList<String> sorcerer1;
    private javax.swing.JPanel sorcererTab;
    private javax.swing.JLabel spellNameLabel;
    private javax.swing.JTextField spellNameText;
    private javax.swing.JLabel strPNG;
    private javax.swing.JTable tableCharacters;
    private javax.swing.JList<String> warlock0;
    private javax.swing.JList<String> warlock1;
    private javax.swing.JPanel warlockTab;
    private javax.swing.JLabel wisPNG;
    private javax.swing.JList<String> wizard0;
    private javax.swing.JList<String> wizard1;
    private javax.swing.JPanel wizardTab;
    // End of variables declaration//GEN-END:variables
}
